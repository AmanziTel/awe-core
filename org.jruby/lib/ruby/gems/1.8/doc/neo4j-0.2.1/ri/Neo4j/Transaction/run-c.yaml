--- !ruby/object:RI::MethodDescription 
visibility: public
block_params: tx
comment: 
- !ruby/struct:SM::Flow::P 
  body: Runs a block in a Neo4j transaction
- !ruby/struct:SM::Flow::P 
  body: Most operations on neo requires an transaction. In Neo4j all read and write
    operations are wrapped automatically in an transaction. You will get much better
    performance if one transaction is wrapped around several neo operation instead
    of running one transaction per neo operation. If one transaction is already running
    then a 'placebo' transaction will be created. Performing a finish on a placebo
    transaction will not finish the 'real' transaction.
- !ruby/struct:SM::Flow::H 
  text: Params
  level: 4
- !ruby/struct:SM::Flow::P 
  body: '@yield the block to be performed in one transaction @yieldparam [Neo4j::Transaction]
    The transaction'
- !ruby/struct:SM::Flow::H 
  text: Examples
  level: 4
- !ruby/struct:SM::Flow::VERB 
  body: " include 'neo4j'\n\n Neo4j::Transaction.run {\n   node = PersonNode.new\n\
    \ }\n"
- !ruby/struct:SM::Flow::P 
  body: You have also access to transaction object
- !ruby/struct:SM::Flow::VERB 
  body: "  Neo4j::Transaction.run { |t|\n    # something failed\n    t.failure # will \
    cause a rollback\n  }\n"
- !ruby/struct:SM::Flow::H 
  text: Returns
  level: 4
- !ruby/struct:SM::Flow::P 
  body: The value of the evaluated provided block
- !ruby/struct:SM::Flow::P 
  body: ":api: public"
full_name: Neo4j::Transaction::run
params: () {|tx| ...}
name: run
is_singleton: true
aliases: []

