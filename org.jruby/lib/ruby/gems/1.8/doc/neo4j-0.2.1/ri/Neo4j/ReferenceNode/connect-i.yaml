--- !ruby/object:RI::MethodDescription 
visibility: public
block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Connects the given node with the reference node. The type of the relationship
    will be the same as the class name of the specified node unless the optional parameter
    type is specified. This method is used internally to keep a reference to all node
    instances in the node space (useful for example for reindexing all nodes by traversing
    the node space).
- !ruby/struct:SM::Flow::H 
  text: Parameters
  level: 4
- !ruby/object:SM::Flow::LIST 
  type: :NOTE
  contents: 
  - !ruby/struct:SM::Flow::LI 
    body: Connect the reference node with this node
    label: 'node<Neo4j::NodeMixin>:'
  - !ruby/struct:SM::Flow::LI 
    body: Optinal, the type of the relationship we want to create
    label: 'type<String>:'
- !ruby/struct:SM::Flow::H 
  text: Returns
  level: 4
- !ruby/struct:SM::Flow::P 
  body: nil
- !ruby/struct:SM::Flow::P 
  body: ":api: private"
full_name: Neo4j::ReferenceNode#connect
params: (node, type = node.class.root_class)
name: connect
is_singleton: false
aliases: []

