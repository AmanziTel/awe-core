
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "InterFreqEventResults", isSet = false )
    public class InterFreqEventResults implements IASN1PreparedElement {
            
        @ASN1Element ( name = "eventID", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private EventIDInterFreq eventID = null;
                
  
        @ASN1Element ( name = "interFreqCellList", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private InterFreqCellList interFreqCellList = null;
                
  
        
        public EventIDInterFreq getEventID () {
            return this.eventID;
        }

        

        public void setEventID (EventIDInterFreq value) {
            this.eventID = value;
        }
        
  
        
        public InterFreqCellList getInterFreqCellList () {
            return this.interFreqCellList;
        }

        
        public boolean isInterFreqCellListPresent () {
            return this.interFreqCellList != null;
        }
        

        public void setInterFreqCellList (InterFreqCellList value) {
            this.interFreqCellList = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(InterFreqEventResults.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            