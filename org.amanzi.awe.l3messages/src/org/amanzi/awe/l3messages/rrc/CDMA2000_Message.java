
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.CoderFactory;
import org.bn.annotations.ASN1BitString;
import org.bn.annotations.ASN1Element;
import org.bn.annotations.ASN1PreparedElement;
import org.bn.annotations.ASN1Sequence;
import org.bn.annotations.constraints.ASN1SizeConstraint;
import org.bn.annotations.constraints.ASN1ValueRangeConstraint;
import org.bn.coders.IASN1PreparedElement;
import org.bn.coders.IASN1PreparedElementData;
import org.bn.types.BitString;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "CDMA2000_Message", isSet = false )
    public class CDMA2000_Message implements IASN1PreparedElement {
            @ASN1BitString( name = "" )
    
            @ASN1SizeConstraint ( max = 8L )
        
        @ASN1Element ( name = "msg-Type", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private BitString msg_Type = null;
                
  @ASN1BitString( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 512L 
		
	   )
	   
        @ASN1Element ( name = "payload", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private BitString payload = null;
                
  
        
        public BitString getMsg_Type () {
            return this.msg_Type;
        }

        

        public void setMsg_Type (BitString value) {
            this.msg_Type = value;
        }
        
  
        
        public BitString getPayload () {
            return this.payload;
        }

        

        public void setPayload (BitString value) {
            this.payload = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(CDMA2000_Message.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            