
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "MeasurementCapability_r4_ext", isSet = false )
    public class MeasurementCapability_r4_ext implements IASN1PreparedElement {
            
        @ASN1Element ( name = "downlinkCompressedMode-LCR", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CompressedModeMeasCapability_LCR_r4 downlinkCompressedMode_LCR = null;
                
  
        @ASN1Element ( name = "uplinkCompressedMode-LCR", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CompressedModeMeasCapability_LCR_r4 uplinkCompressedMode_LCR = null;
                
  
        
        public CompressedModeMeasCapability_LCR_r4 getDownlinkCompressedMode_LCR () {
            return this.downlinkCompressedMode_LCR;
        }

        

        public void setDownlinkCompressedMode_LCR (CompressedModeMeasCapability_LCR_r4 value) {
            this.downlinkCompressedMode_LCR = value;
        }
        
  
        
        public CompressedModeMeasCapability_LCR_r4 getUplinkCompressedMode_LCR () {
            return this.uplinkCompressedMode_LCR;
        }

        

        public void setUplinkCompressedMode_LCR (CompressedModeMeasCapability_LCR_r4 value) {
            this.uplinkCompressedMode_LCR = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(MeasurementCapability_r4_ext.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            