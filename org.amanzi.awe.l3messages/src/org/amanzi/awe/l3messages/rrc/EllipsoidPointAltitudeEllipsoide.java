
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.CoderFactory;
import org.bn.annotations.ASN1Element;
import org.bn.annotations.ASN1Enum;
import org.bn.annotations.ASN1EnumItem;
import org.bn.annotations.ASN1Integer;
import org.bn.annotations.ASN1PreparedElement;
import org.bn.annotations.ASN1Sequence;
import org.bn.annotations.constraints.ASN1ValueRangeConstraint;
import org.bn.coders.IASN1PreparedElement;
import org.bn.coders.IASN1PreparedElementData;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "EllipsoidPointAltitudeEllipsoide", isSet = false )
    public class EllipsoidPointAltitudeEllipsoide implements IASN1PreparedElement {
            

    @ASN1PreparedElement
    @ASN1Enum (
        name = "LatitudeSignEnumType"
    )
    public static class LatitudeSignEnumType implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "north", hasTag = true , tag = 0 )
            north , 
            @ASN1EnumItem ( name = "south", hasTag = true , tag = 1 )
            south , 
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(LatitudeSignEnumType.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

    }
                
        @ASN1Element ( name = "latitudeSign", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private LatitudeSignEnumType latitudeSign = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 8388607L 
		
	   )
	   
        @ASN1Element ( name = "latitude", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer latitude = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = -8388608L, 
		
		max = 8388607L 
		
	   )
	   
        @ASN1Element ( name = "longitude", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer longitude = null;
                
  

    @ASN1PreparedElement
    @ASN1Enum (
        name = "AltitudeDirectionEnumType"
    )
    public static class AltitudeDirectionEnumType implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "height", hasTag = true , tag = 0 )
            height , 
            @ASN1EnumItem ( name = "depth", hasTag = true , tag = 1 )
            depth , 
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(AltitudeDirectionEnumType.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

    }
                
        @ASN1Element ( name = "altitudeDirection", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AltitudeDirectionEnumType altitudeDirection = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 32767L 
		
	   )
	   
        @ASN1Element ( name = "altitude", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer altitude = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 127L 
		
	   )
	   
        @ASN1Element ( name = "uncertaintySemiMajor", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer uncertaintySemiMajor = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 127L 
		
	   )
	   
        @ASN1Element ( name = "uncertaintySemiMinor", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer uncertaintySemiMinor = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 89L 
		
	   )
	   
        @ASN1Element ( name = "orientationMajorAxis", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer orientationMajorAxis = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 127L 
		
	   )
	   
        @ASN1Element ( name = "uncertaintyAltitude", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer uncertaintyAltitude = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 100L 
		
	   )
	   
        @ASN1Element ( name = "confidence", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer confidence = null;
                
  
        
        public LatitudeSignEnumType getLatitudeSign () {
            return this.latitudeSign;
        }

        

        public void setLatitudeSign (LatitudeSignEnumType value) {
            this.latitudeSign = value;
        }
        
  
        
        public Integer getLatitude () {
            return this.latitude;
        }

        

        public void setLatitude (Integer value) {
            this.latitude = value;
        }
        
  
        
        public Integer getLongitude () {
            return this.longitude;
        }

        

        public void setLongitude (Integer value) {
            this.longitude = value;
        }
        
  
        
        public AltitudeDirectionEnumType getAltitudeDirection () {
            return this.altitudeDirection;
        }

        

        public void setAltitudeDirection (AltitudeDirectionEnumType value) {
            this.altitudeDirection = value;
        }
        
  
        
        public Integer getAltitude () {
            return this.altitude;
        }

        

        public void setAltitude (Integer value) {
            this.altitude = value;
        }
        
  
        
        public Integer getUncertaintySemiMajor () {
            return this.uncertaintySemiMajor;
        }

        

        public void setUncertaintySemiMajor (Integer value) {
            this.uncertaintySemiMajor = value;
        }
        
  
        
        public Integer getUncertaintySemiMinor () {
            return this.uncertaintySemiMinor;
        }

        

        public void setUncertaintySemiMinor (Integer value) {
            this.uncertaintySemiMinor = value;
        }
        
  
        
        public Integer getOrientationMajorAxis () {
            return this.orientationMajorAxis;
        }

        

        public void setOrientationMajorAxis (Integer value) {
            this.orientationMajorAxis = value;
        }
        
  
        
        public Integer getUncertaintyAltitude () {
            return this.uncertaintyAltitude;
        }

        

        public void setUncertaintyAltitude (Integer value) {
            this.uncertaintyAltitude = value;
        }
        
  
        
        public Integer getConfidence () {
            return this.confidence;
        }

        

        public void setConfidence (Integer value) {
            this.confidence = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(EllipsoidPointAltitudeEllipsoide.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            