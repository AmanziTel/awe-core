
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "T_ADVinfo", isSet = false )
    public class T_ADVinfo implements IASN1PreparedElement {
            @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 2047L 
		
	   )
	   
        @ASN1Element ( name = "t-ADV", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer t_ADV = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 4095L 
		
	   )
	   
        @ASN1Element ( name = "sfn", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer sfn = null;
                
  
        
        public Integer getT_ADV () {
            return this.t_ADV;
        }

        

        public void setT_ADV (Integer value) {
            this.t_ADV = value;
        }
        
  
        
        public Integer getSfn () {
            return this.sfn;
        }

        

        public void setSfn (Integer value) {
            this.sfn = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(T_ADVinfo.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            