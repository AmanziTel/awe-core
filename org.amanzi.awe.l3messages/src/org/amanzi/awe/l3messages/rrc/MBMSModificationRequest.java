
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "MBMSModificationRequest", isSet = false )
    public class MBMSModificationRequest implements IASN1PreparedElement {
            
        @ASN1Element ( name = "mbms-PreferredFreqRequest", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private MBMS_ServiceIdentity_r6 mbms_PreferredFreqRequest = null;
                
  
        @ASN1Element ( name = "rb_InformationReleaseList", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private RB_InformationReleaseList rb_InformationReleaseList = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "nonCriticalExtensions" , isSet = false )
       public static class NonCriticalExtensionsSequenceType implements IASN1PreparedElement {
                
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_NonCriticalExtensionsSequenceType;
        }

       private static IASN1PreparedElementData preparedData_NonCriticalExtensionsSequenceType = CoderFactory.getInstance().newPreparedElementData(NonCriticalExtensionsSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "nonCriticalExtensions", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private NonCriticalExtensionsSequenceType nonCriticalExtensions = null;
                
  
        
        public MBMS_ServiceIdentity_r6 getMbms_PreferredFreqRequest () {
            return this.mbms_PreferredFreqRequest;
        }

        
        public boolean isMbms_PreferredFreqRequestPresent () {
            return this.mbms_PreferredFreqRequest != null;
        }
        

        public void setMbms_PreferredFreqRequest (MBMS_ServiceIdentity_r6 value) {
            this.mbms_PreferredFreqRequest = value;
        }
        
  
        
        public RB_InformationReleaseList getRb_InformationReleaseList () {
            return this.rb_InformationReleaseList;
        }

        
        public boolean isRb_InformationReleaseListPresent () {
            return this.rb_InformationReleaseList != null;
        }
        

        public void setRb_InformationReleaseList (RB_InformationReleaseList value) {
            this.rb_InformationReleaseList = value;
        }
        
  
        
        public NonCriticalExtensionsSequenceType getNonCriticalExtensions () {
            return this.nonCriticalExtensions;
        }

        
        public boolean isNonCriticalExtensionsPresent () {
            return this.nonCriticalExtensions != null;
        }
        

        public void setNonCriticalExtensions (NonCriticalExtensionsSequenceType value) {
            this.nonCriticalExtensions = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(MBMSModificationRequest.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            