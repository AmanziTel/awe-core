
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "InterRATMeasuredResults" )
    public class InterRATMeasuredResults implements IASN1PreparedElement {
            
        @ASN1Element ( name = "gsm", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private GSM_MeasuredResultsList gsm = null;
                
  
        @ASN1Null ( name = "spare" ) 
    
        @ASN1Element ( name = "spare", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private org.bn.types.NullObject spare = null;
                
  
        
        public GSM_MeasuredResultsList getGsm () {
            return this.gsm;
        }

        public boolean isGsmSelected () {
            return this.gsm != null;
        }

        private void setGsm (GSM_MeasuredResultsList value) {
            this.gsm = value;
        }

        
        public void selectGsm (GSM_MeasuredResultsList value) {
            this.gsm = value;
            
                    setSpare(null);
                            
        }

        
  
        
        public org.bn.types.NullObject getSpare () {
            return this.spare;
        }

        public boolean isSpareSelected () {
            return this.spare != null;
        }

        private void setSpare (org.bn.types.NullObject value) {
            this.spare = value;
        }

        
        public void selectSpare () {
            selectSpare (new org.bn.types.NullObject());
	}
	
        public void selectSpare (org.bn.types.NullObject value) {
            this.spare = value;
            
                    setGsm(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(InterRATMeasuredResults.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            