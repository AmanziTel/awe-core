
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.CoderFactory;
import org.bn.annotations.ASN1Enum;
import org.bn.annotations.ASN1EnumItem;
import org.bn.annotations.ASN1PreparedElement;
import org.bn.coders.IASN1PreparedElement;
import org.bn.coders.IASN1PreparedElementData;




    @ASN1PreparedElement
    @ASN1Enum (
        name = "TotalRLC_AM_BufferSize"
    )
    public class TotalRLC_AM_BufferSize implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "dummy", hasTag = true , tag = 0 )
            dummy , 
            @ASN1EnumItem ( name = "kb10", hasTag = true , tag = 1 )
            kb10 , 
            @ASN1EnumItem ( name = "kb50", hasTag = true , tag = 2 )
            kb50 , 
            @ASN1EnumItem ( name = "kb100", hasTag = true , tag = 3 )
            kb100 , 
            @ASN1EnumItem ( name = "kb150", hasTag = true , tag = 4 )
            kb150 , 
            @ASN1EnumItem ( name = "kb500", hasTag = true , tag = 5 )
            kb500 , 
            @ASN1EnumItem ( name = "kb1000", hasTag = true , tag = 6 )
            kb1000 , 
            @ASN1EnumItem ( name = "spare", hasTag = true , tag = 7 )
            spare , 
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(TotalRLC_AM_BufferSize.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            