
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "UL_DCCH_Message", isSet = false )
    public class UL_DCCH_Message implements IASN1PreparedElement {
            
        @ASN1Element ( name = "integrityCheckInfo", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private IntegrityCheckInfo integrityCheckInfo = null;
                
  
        @ASN1Element ( name = "message", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private UL_DCCH_MessageType message = null;
                
  
        
        public IntegrityCheckInfo getIntegrityCheckInfo () {
            return this.integrityCheckInfo;
        }

        
        public boolean isIntegrityCheckInfoPresent () {
            return this.integrityCheckInfo != null;
        }
        

        public void setIntegrityCheckInfo (IntegrityCheckInfo value) {
            this.integrityCheckInfo = value;
        }
        
  
        
        public UL_DCCH_MessageType getMessage () {
            return this.message;
        }

        

        public void setMessage (UL_DCCH_MessageType value) {
            this.message = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(UL_DCCH_Message.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            