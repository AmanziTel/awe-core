
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "PDCP_Capability_r5_ext", isSet = false )
    public class PDCP_Capability_r5_ext implements IASN1PreparedElement {
            @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "supportForRfc3095ContextRelocation", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean supportForRfc3095ContextRelocation = null;
                
  
        @ASN1Element ( name = "maxHcContextSpace", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private MaxHcContextSpace_r5_ext maxHcContextSpace = null;
                
  
        
        public Boolean getSupportForRfc3095ContextRelocation () {
            return this.supportForRfc3095ContextRelocation;
        }

        

        public void setSupportForRfc3095ContextRelocation (Boolean value) {
            this.supportForRfc3095ContextRelocation = value;
        }
        
  
        
        public MaxHcContextSpace_r5_ext getMaxHcContextSpace () {
            return this.maxHcContextSpace;
        }

        
        public boolean isMaxHcContextSpacePresent () {
            return this.maxHcContextSpace != null;
        }
        

        public void setMaxHcContextSpace (MaxHcContextSpace_r5_ext value) {
            this.maxHcContextSpace = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(PDCP_Capability_r5_ext.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            