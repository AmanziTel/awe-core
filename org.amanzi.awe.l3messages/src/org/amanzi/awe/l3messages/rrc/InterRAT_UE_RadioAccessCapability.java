
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "InterRAT_UE_RadioAccessCapability" )
    public class InterRAT_UE_RadioAccessCapability implements IASN1PreparedElement {
            

       @ASN1PreparedElement
       @ASN1Sequence ( name = "gsm" , isSet = false )
       public static class GsmSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "gsm-Classmark2", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private GSM_Classmark2 gsm_Classmark2 = null;
                
  
        @ASN1Element ( name = "gsm-Classmark3", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private GSM_Classmark3 gsm_Classmark3 = null;
                
  
        
        public GSM_Classmark2 getGsm_Classmark2 () {
            return this.gsm_Classmark2;
        }

        

        public void setGsm_Classmark2 (GSM_Classmark2 value) {
            this.gsm_Classmark2 = value;
        }
        
  
        
        public GSM_Classmark3 getGsm_Classmark3 () {
            return this.gsm_Classmark3;
        }

        

        public void setGsm_Classmark3 (GSM_Classmark3 value) {
            this.gsm_Classmark3 = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_GsmSequenceType;
        }

       private static IASN1PreparedElementData preparedData_GsmSequenceType = CoderFactory.getInstance().newPreparedElementData(GsmSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "gsm", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private GsmSequenceType gsm = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "cdma2000" , isSet = false )
       public static class Cdma2000SequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "cdma2000-MessageList", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private CDMA2000_MessageList cdma2000_MessageList = null;
                
  
        
        public CDMA2000_MessageList getCdma2000_MessageList () {
            return this.cdma2000_MessageList;
        }

        

        public void setCdma2000_MessageList (CDMA2000_MessageList value) {
            this.cdma2000_MessageList = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_Cdma2000SequenceType;
        }

       private static IASN1PreparedElementData preparedData_Cdma2000SequenceType = CoderFactory.getInstance().newPreparedElementData(Cdma2000SequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "cdma2000", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Cdma2000SequenceType cdma2000 = null;
                
  
        
        public GsmSequenceType getGsm () {
            return this.gsm;
        }

        public boolean isGsmSelected () {
            return this.gsm != null;
        }

        private void setGsm (GsmSequenceType value) {
            this.gsm = value;
        }

        
        public void selectGsm (GsmSequenceType value) {
            this.gsm = value;
            
                    setCdma2000(null);
                            
        }

        
  
        
        public Cdma2000SequenceType getCdma2000 () {
            return this.cdma2000;
        }

        public boolean isCdma2000Selected () {
            return this.cdma2000 != null;
        }

        private void setCdma2000 (Cdma2000SequenceType value) {
            this.cdma2000 = value;
        }

        
        public void selectCdma2000 (Cdma2000SequenceType value) {
            this.cdma2000 = value;
            
                    setGsm(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(InterRAT_UE_RadioAccessCapability.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            