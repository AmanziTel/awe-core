
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Enum (
        name = "RadioFrequencyBandFDD2"
    )
    public class RadioFrequencyBandFDD2 implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "bandVIII", hasTag = true , tag = 0 )
            bandVIII , 
            @ASN1EnumItem ( name = "bandIX", hasTag = true , tag = 1 )
            bandIX , 
            @ASN1EnumItem ( name = "bandX", hasTag = true , tag = 2 )
            bandX , 
            @ASN1EnumItem ( name = "bandXI", hasTag = true , tag = 3 )
            bandXI , 
            @ASN1EnumItem ( name = "bandXII", hasTag = true , tag = 4 )
            bandXII , 
            @ASN1EnumItem ( name = "bandXIII", hasTag = true , tag = 5 )
            bandXIII , 
            @ASN1EnumItem ( name = "bandXIV", hasTag = true , tag = 6 )
            bandXIV , 
            @ASN1EnumItem ( name = "bandXV", hasTag = true , tag = 7 )
            bandXV , 
            @ASN1EnumItem ( name = "bandXVI", hasTag = true , tag = 8 )
            bandXVI , 
            @ASN1EnumItem ( name = "bandXVII", hasTag = true , tag = 9 )
            bandXVII , 
            @ASN1EnumItem ( name = "bandXVIII", hasTag = true , tag = 10 )
            bandXVIII , 
            @ASN1EnumItem ( name = "bandXIX", hasTag = true , tag = 11 )
            bandXIX , 
            @ASN1EnumItem ( name = "bandXX", hasTag = true , tag = 12 )
            bandXX , 
            @ASN1EnumItem ( name = "bandXXI", hasTag = true , tag = 13 )
            bandXXI , 
            @ASN1EnumItem ( name = "bandXXII", hasTag = true , tag = 14 )
            bandXXII , 
            @ASN1EnumItem ( name = "extension-indicator", hasTag = true , tag = 15 )
            extension_indicator , 
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(RadioFrequencyBandFDD2.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            