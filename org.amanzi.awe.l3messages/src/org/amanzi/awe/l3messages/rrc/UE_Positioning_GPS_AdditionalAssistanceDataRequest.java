
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "UE_Positioning_GPS_AdditionalAssistanceDataRequest", isSet = false )
    public class UE_Positioning_GPS_AdditionalAssistanceDataRequest implements IASN1PreparedElement {
            @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "almanacRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean almanacRequest = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "utcModelRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean utcModelRequest = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "ionosphericModelRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean ionosphericModelRequest = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "navigationModelRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean navigationModelRequest = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "dgpsCorrectionsRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean dgpsCorrectionsRequest = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "referenceLocationRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean referenceLocationRequest = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "referenceTimeRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean referenceTimeRequest = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "aquisitionAssistanceRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean aquisitionAssistanceRequest = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "realTimeIntegrityRequest", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean realTimeIntegrityRequest = null;
                
  
        @ASN1Element ( name = "navModelAddDataRequest", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private UE_Positioning_GPS_NavModelAddDataReq navModelAddDataRequest = null;
                
  
        
        public Boolean getAlmanacRequest () {
            return this.almanacRequest;
        }

        

        public void setAlmanacRequest (Boolean value) {
            this.almanacRequest = value;
        }
        
  
        
        public Boolean getUtcModelRequest () {
            return this.utcModelRequest;
        }

        

        public void setUtcModelRequest (Boolean value) {
            this.utcModelRequest = value;
        }
        
  
        
        public Boolean getIonosphericModelRequest () {
            return this.ionosphericModelRequest;
        }

        

        public void setIonosphericModelRequest (Boolean value) {
            this.ionosphericModelRequest = value;
        }
        
  
        
        public Boolean getNavigationModelRequest () {
            return this.navigationModelRequest;
        }

        

        public void setNavigationModelRequest (Boolean value) {
            this.navigationModelRequest = value;
        }
        
  
        
        public Boolean getDgpsCorrectionsRequest () {
            return this.dgpsCorrectionsRequest;
        }

        

        public void setDgpsCorrectionsRequest (Boolean value) {
            this.dgpsCorrectionsRequest = value;
        }
        
  
        
        public Boolean getReferenceLocationRequest () {
            return this.referenceLocationRequest;
        }

        

        public void setReferenceLocationRequest (Boolean value) {
            this.referenceLocationRequest = value;
        }
        
  
        
        public Boolean getReferenceTimeRequest () {
            return this.referenceTimeRequest;
        }

        

        public void setReferenceTimeRequest (Boolean value) {
            this.referenceTimeRequest = value;
        }
        
  
        
        public Boolean getAquisitionAssistanceRequest () {
            return this.aquisitionAssistanceRequest;
        }

        

        public void setAquisitionAssistanceRequest (Boolean value) {
            this.aquisitionAssistanceRequest = value;
        }
        
  
        
        public Boolean getRealTimeIntegrityRequest () {
            return this.realTimeIntegrityRequest;
        }

        

        public void setRealTimeIntegrityRequest (Boolean value) {
            this.realTimeIntegrityRequest = value;
        }
        
  
        
        public UE_Positioning_GPS_NavModelAddDataReq getNavModelAddDataRequest () {
            return this.navModelAddDataRequest;
        }

        
        public boolean isNavModelAddDataRequestPresent () {
            return this.navModelAddDataRequest != null;
        }
        

        public void setNavModelAddDataRequest (UE_Positioning_GPS_NavModelAddDataReq value) {
            this.navModelAddDataRequest = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(UE_Positioning_GPS_AdditionalAssistanceDataRequest.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            