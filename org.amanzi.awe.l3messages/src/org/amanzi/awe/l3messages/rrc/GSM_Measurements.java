
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "GSM_Measurements", isSet = false )
    public class GSM_Measurements implements IASN1PreparedElement {
            @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "gsm900", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean gsm900 = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "dcs1800", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean dcs1800 = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "gsm1900", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean gsm1900 = null;
                
  
        
        public Boolean getGsm900 () {
            return this.gsm900;
        }

        

        public void setGsm900 (Boolean value) {
            this.gsm900 = value;
        }
        
  
        
        public Boolean getDcs1800 () {
            return this.dcs1800;
        }

        

        public void setDcs1800 (Boolean value) {
            this.dcs1800 = value;
        }
        
  
        
        public Boolean getGsm1900 () {
            return this.gsm1900;
        }

        

        public void setGsm1900 (Boolean value) {
            this.gsm1900 = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(GSM_Measurements.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            