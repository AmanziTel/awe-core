
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.CoderFactory;
import org.bn.annotations.ASN1Element;
import org.bn.annotations.ASN1Enum;
import org.bn.annotations.ASN1EnumItem;
import org.bn.annotations.ASN1PreparedElement;
import org.bn.annotations.ASN1Sequence;
import org.bn.coders.IASN1PreparedElement;
import org.bn.coders.IASN1PreparedElementData;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "MultiModeRAT_Capability_v680ext", isSet = false )
    public class MultiModeRAT_Capability_v680ext implements IASN1PreparedElement {
            

    @ASN1PreparedElement
    @ASN1Enum (
        name = "SupportOfHandoverToGANEnumType"
    )
    public static class SupportOfHandoverToGANEnumType implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "doesSupportHandoverToGAN", hasTag = true , tag = 0 )
            doesSupportHandoverToGAN
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(SupportOfHandoverToGANEnumType.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

    }
                
        @ASN1Element ( name = "supportOfHandoverToGAN", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private SupportOfHandoverToGANEnumType supportOfHandoverToGAN = null;
                
  
        
        public SupportOfHandoverToGANEnumType getSupportOfHandoverToGAN () {
            return this.supportOfHandoverToGAN;
        }

        
        public boolean isSupportOfHandoverToGANPresent () {
            return this.supportOfHandoverToGAN != null;
        }
        

        public void setSupportOfHandoverToGAN (SupportOfHandoverToGANEnumType value) {
            this.supportOfHandoverToGAN = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(MultiModeRAT_Capability_v680ext.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            