
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.CoderFactory;
import org.bn.annotations.ASN1Element;
import org.bn.annotations.ASN1PreparedElement;
import org.bn.annotations.ASN1Sequence;
import org.bn.coders.IASN1PreparedElement;
import org.bn.coders.IASN1PreparedElementData;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "PhysicalChannelCapability", isSet = false )
    public class PhysicalChannelCapability implements IASN1PreparedElement {
            

       @ASN1PreparedElement
       @ASN1Sequence ( name = "fddPhysChCapability" , isSet = false )
       public static class FddPhysChCapabilitySequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "downlinkPhysChCapability", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private DL_PhysChCapabilityFDD downlinkPhysChCapability = null;
                
  
        @ASN1Element ( name = "uplinkPhysChCapability", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private UL_PhysChCapabilityFDD uplinkPhysChCapability = null;
                
  
        
        public DL_PhysChCapabilityFDD getDownlinkPhysChCapability () {
            return this.downlinkPhysChCapability;
        }

        

        public void setDownlinkPhysChCapability (DL_PhysChCapabilityFDD value) {
            this.downlinkPhysChCapability = value;
        }
        
  
        
        public UL_PhysChCapabilityFDD getUplinkPhysChCapability () {
            return this.uplinkPhysChCapability;
        }

        

        public void setUplinkPhysChCapability (UL_PhysChCapabilityFDD value) {
            this.uplinkPhysChCapability = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_FddPhysChCapabilitySequenceType;
        }

       private static IASN1PreparedElementData preparedData_FddPhysChCapabilitySequenceType = CoderFactory.getInstance().newPreparedElementData(FddPhysChCapabilitySequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "fddPhysChCapability", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private FddPhysChCapabilitySequenceType fddPhysChCapability = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "tddPhysChCapability" , isSet = false )
       public static class TddPhysChCapabilitySequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "downlinkPhysChCapability", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private DL_PhysChCapabilityTDD downlinkPhysChCapability = null;
                
  
        @ASN1Element ( name = "uplinkPhysChCapability", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private UL_PhysChCapabilityTDD uplinkPhysChCapability = null;
                
  
        
        public DL_PhysChCapabilityTDD getDownlinkPhysChCapability () {
            return this.downlinkPhysChCapability;
        }

        

        public void setDownlinkPhysChCapability (DL_PhysChCapabilityTDD value) {
            this.downlinkPhysChCapability = value;
        }
        
  
        
        public UL_PhysChCapabilityTDD getUplinkPhysChCapability () {
            return this.uplinkPhysChCapability;
        }

        

        public void setUplinkPhysChCapability (UL_PhysChCapabilityTDD value) {
            this.uplinkPhysChCapability = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_TddPhysChCapabilitySequenceType;
        }

       private static IASN1PreparedElementData preparedData_TddPhysChCapabilitySequenceType = CoderFactory.getInstance().newPreparedElementData(TddPhysChCapabilitySequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "tddPhysChCapability", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private TddPhysChCapabilitySequenceType tddPhysChCapability = null;
                
  
        
        public FddPhysChCapabilitySequenceType getFddPhysChCapability () {
            return this.fddPhysChCapability;
        }

        
        public boolean isFddPhysChCapabilityPresent () {
            return this.fddPhysChCapability != null;
        }
        

        public void setFddPhysChCapability (FddPhysChCapabilitySequenceType value) {
            this.fddPhysChCapability = value;
        }
        
  
        
        public TddPhysChCapabilitySequenceType getTddPhysChCapability () {
            return this.tddPhysChCapability;
        }

        
        public boolean isTddPhysChCapabilityPresent () {
            return this.tddPhysChCapability != null;
        }
        

        public void setTddPhysChCapability (TddPhysChCapabilitySequenceType value) {
            this.tddPhysChCapability = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(PhysicalChannelCapability.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            