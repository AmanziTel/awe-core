
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "CompressedModeMeasCapabFDD_ext", isSet = false )
    public class CompressedModeMeasCapabFDD_ext implements IASN1PreparedElement {
            
        @ASN1Element ( name = "radioFrequencyBandFDD2", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RadioFrequencyBandFDD2 radioFrequencyBandFDD2 = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "dl-MeasurementsFDD", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean dl_MeasurementsFDD = null;
                
  @ASN1Boolean( name = "" )
    
        @ASN1Element ( name = "ul-MeasurementsFDD", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Boolean ul_MeasurementsFDD = null;
                
  
        
        public RadioFrequencyBandFDD2 getRadioFrequencyBandFDD2 () {
            return this.radioFrequencyBandFDD2;
        }

        

        public void setRadioFrequencyBandFDD2 (RadioFrequencyBandFDD2 value) {
            this.radioFrequencyBandFDD2 = value;
        }
        
  
        
        public Boolean getDl_MeasurementsFDD () {
            return this.dl_MeasurementsFDD;
        }

        

        public void setDl_MeasurementsFDD (Boolean value) {
            this.dl_MeasurementsFDD = value;
        }
        
  
        
        public Boolean getUl_MeasurementsFDD () {
            return this.ul_MeasurementsFDD;
        }

        

        public void setUl_MeasurementsFDD (Boolean value) {
            this.ul_MeasurementsFDD = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(CompressedModeMeasCapabFDD_ext.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            