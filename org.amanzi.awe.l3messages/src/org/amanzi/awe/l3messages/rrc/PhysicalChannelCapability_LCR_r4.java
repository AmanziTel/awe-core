
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "PhysicalChannelCapability_LCR_r4", isSet = false )
    public class PhysicalChannelCapability_LCR_r4 implements IASN1PreparedElement {
            

       @ASN1PreparedElement
       @ASN1Sequence ( name = "tdd128_PhysChCapability" , isSet = false )
       public static class Tdd128_PhysChCapabilitySequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "downlinkPhysChCapability", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private DL_PhysChCapabilityTDD_LCR_r4 downlinkPhysChCapability = null;
                
  
        @ASN1Element ( name = "uplinkPhysChCapability", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private UL_PhysChCapabilityTDD_LCR_r4 uplinkPhysChCapability = null;
                
  
        
        public DL_PhysChCapabilityTDD_LCR_r4 getDownlinkPhysChCapability () {
            return this.downlinkPhysChCapability;
        }

        

        public void setDownlinkPhysChCapability (DL_PhysChCapabilityTDD_LCR_r4 value) {
            this.downlinkPhysChCapability = value;
        }
        
  
        
        public UL_PhysChCapabilityTDD_LCR_r4 getUplinkPhysChCapability () {
            return this.uplinkPhysChCapability;
        }

        

        public void setUplinkPhysChCapability (UL_PhysChCapabilityTDD_LCR_r4 value) {
            this.uplinkPhysChCapability = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_Tdd128_PhysChCapabilitySequenceType;
        }

       private static IASN1PreparedElementData preparedData_Tdd128_PhysChCapabilitySequenceType = CoderFactory.getInstance().newPreparedElementData(Tdd128_PhysChCapabilitySequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "tdd128_PhysChCapability", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private Tdd128_PhysChCapabilitySequenceType tdd128_PhysChCapability = null;
                
  
        
        public Tdd128_PhysChCapabilitySequenceType getTdd128_PhysChCapability () {
            return this.tdd128_PhysChCapability;
        }

        
        public boolean isTdd128_PhysChCapabilityPresent () {
            return this.tdd128_PhysChCapability != null;
        }
        

        public void setTdd128_PhysChCapability (Tdd128_PhysChCapabilitySequenceType value) {
            this.tdd128_PhysChCapability = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(PhysicalChannelCapability_LCR_r4.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            