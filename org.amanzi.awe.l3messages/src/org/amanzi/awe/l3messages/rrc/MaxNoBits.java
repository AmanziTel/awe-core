
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.CoderFactory;
import org.bn.annotations.ASN1Enum;
import org.bn.annotations.ASN1EnumItem;
import org.bn.annotations.ASN1PreparedElement;
import org.bn.coders.IASN1PreparedElement;
import org.bn.coders.IASN1PreparedElementData;




    @ASN1PreparedElement
    @ASN1Enum (
        name = "MaxNoBits"
    )
    public class MaxNoBits implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "b640", hasTag = true , tag = 0 )
            b640 , 
            @ASN1EnumItem ( name = "b1280", hasTag = true , tag = 1 )
            b1280 , 
            @ASN1EnumItem ( name = "b2560", hasTag = true , tag = 2 )
            b2560 , 
            @ASN1EnumItem ( name = "b3840", hasTag = true , tag = 3 )
            b3840 , 
            @ASN1EnumItem ( name = "b5120", hasTag = true , tag = 4 )
            b5120 , 
            @ASN1EnumItem ( name = "b6400", hasTag = true , tag = 5 )
            b6400 , 
            @ASN1EnumItem ( name = "b7680", hasTag = true , tag = 6 )
            b7680 , 
            @ASN1EnumItem ( name = "b8960", hasTag = true , tag = 7 )
            b8960 , 
            @ASN1EnumItem ( name = "b10240", hasTag = true , tag = 8 )
            b10240 , 
            @ASN1EnumItem ( name = "b20480", hasTag = true , tag = 9 )
            b20480 , 
            @ASN1EnumItem ( name = "b40960", hasTag = true , tag = 10 )
            b40960 , 
            @ASN1EnumItem ( name = "b81920", hasTag = true , tag = 11 )
            b81920 , 
            @ASN1EnumItem ( name = "b163840", hasTag = true , tag = 12 )
            b163840 , 
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(MaxNoBits.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            