
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "RRCConnectionSetupComplete", isSet = false )
    public class RRCConnectionSetupComplete implements IASN1PreparedElement {
            
        @ASN1Element ( name = "rrc-TransactionIdentifier", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RRC_TransactionIdentifier rrc_TransactionIdentifier = null;
                
  
        @ASN1Element ( name = "startList", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private STARTList startList = null;
                
  
        @ASN1Element ( name = "ue-RadioAccessCapability", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private UE_RadioAccessCapability ue_RadioAccessCapability = null;
                
  
        @ASN1Element ( name = "ue-RATSpecificCapability", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private InterRAT_UE_RadioAccessCapabilityList ue_RATSpecificCapability = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "v370NonCriticalExtensions" , isSet = false )
       public static class V370NonCriticalExtensionsSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "rrcConnectionSetupComplete-v370ext", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RRCConnectionSetupComplete_v370ext rrcConnectionSetupComplete_v370ext = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "v380NonCriticalExtensions" , isSet = false )
       public static class V380NonCriticalExtensionsSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "rrcConnectionSetupComplete-v380ext", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RRCConnectionSetupComplete_v380ext_IEs rrcConnectionSetupComplete_v380ext = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "v3a0NonCriticalExtensions" , isSet = false )
       public static class V3a0NonCriticalExtensionsSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "rrcConnectionSetupComplete-v3a0ext", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RRCConnectionSetupComplete_v3a0ext_IEs rrcConnectionSetupComplete_v3a0ext = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "laterNonCriticalExtensions" , isSet = false )
       public static class LaterNonCriticalExtensionsSequenceType implements IASN1PreparedElement {
                @ASN1BitString( name = "" )
    
        @ASN1Element ( name = "rrcConnectionSetupComplete-r3-add-ext", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private BitString rrcConnectionSetupComplete_r3_add_ext = null;
                
  

       @ASN1PreparedElement
       @ASN1Sequence ( name = "v3g0NonCriticalExtensions" , isSet = false )
       public static class V3g0NonCriticalExtensionsSequenceType implements IASN1PreparedElement {
                
        @ASN1Element ( name = "rrcConnectionSetupComplete-v3g0ext", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RRCConnectionSetupComplete_v3g0ext_IEs rrcConnectionSetupComplete_v3g0ext = null;
                
  

       @ASN1Element ( name = "v4b0NonCriticalExtensions", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private RRCConnectionSetupComplete_V4b0NonCriticalExtensionsSequenceType v4b0NonCriticalExtensions = null;
                
  
        
        public RRCConnectionSetupComplete_v3g0ext_IEs getRrcConnectionSetupComplete_v3g0ext () {
            return this.rrcConnectionSetupComplete_v3g0ext;
        }

        

        public void setRrcConnectionSetupComplete_v3g0ext (RRCConnectionSetupComplete_v3g0ext_IEs value) {
            this.rrcConnectionSetupComplete_v3g0ext = value;
        }
        
  
        
        public RRCConnectionSetupComplete_V4b0NonCriticalExtensionsSequenceType getV4b0NonCriticalExtensions () {
            return this.v4b0NonCriticalExtensions;
        }

        
        public boolean isV4b0NonCriticalExtensionsPresent () {
            return this.v4b0NonCriticalExtensions != null;
        }
        

        public void setV4b0NonCriticalExtensions (RRCConnectionSetupComplete_V4b0NonCriticalExtensionsSequenceType value) {
            this.v4b0NonCriticalExtensions = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_V3g0NonCriticalExtensionsSequenceType;
        }

       private static IASN1PreparedElementData preparedData_V3g0NonCriticalExtensionsSequenceType = CoderFactory.getInstance().newPreparedElementData(V3g0NonCriticalExtensionsSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "v3g0NonCriticalExtensions", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private V3g0NonCriticalExtensionsSequenceType v3g0NonCriticalExtensions = null;
                
  
        
        public BitString getRrcConnectionSetupComplete_r3_add_ext () {
            return this.rrcConnectionSetupComplete_r3_add_ext;
        }

        
        public boolean isRrcConnectionSetupComplete_r3_add_extPresent () {
            return this.rrcConnectionSetupComplete_r3_add_ext != null;
        }
        

        public void setRrcConnectionSetupComplete_r3_add_ext (BitString value) {
            this.rrcConnectionSetupComplete_r3_add_ext = value;
        }
        
  
        
        public V3g0NonCriticalExtensionsSequenceType getV3g0NonCriticalExtensions () {
            return this.v3g0NonCriticalExtensions;
        }

        
        public boolean isV3g0NonCriticalExtensionsPresent () {
            return this.v3g0NonCriticalExtensions != null;
        }
        

        public void setV3g0NonCriticalExtensions (V3g0NonCriticalExtensionsSequenceType value) {
            this.v3g0NonCriticalExtensions = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_LaterNonCriticalExtensionsSequenceType;
        }

       private static IASN1PreparedElementData preparedData_LaterNonCriticalExtensionsSequenceType = CoderFactory.getInstance().newPreparedElementData(LaterNonCriticalExtensionsSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "laterNonCriticalExtensions", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private LaterNonCriticalExtensionsSequenceType laterNonCriticalExtensions = null;
                
  
        
        public RRCConnectionSetupComplete_v3a0ext_IEs getRrcConnectionSetupComplete_v3a0ext () {
            return this.rrcConnectionSetupComplete_v3a0ext;
        }

        

        public void setRrcConnectionSetupComplete_v3a0ext (RRCConnectionSetupComplete_v3a0ext_IEs value) {
            this.rrcConnectionSetupComplete_v3a0ext = value;
        }
        
  
        
        public LaterNonCriticalExtensionsSequenceType getLaterNonCriticalExtensions () {
            return this.laterNonCriticalExtensions;
        }

        
        public boolean isLaterNonCriticalExtensionsPresent () {
            return this.laterNonCriticalExtensions != null;
        }
        

        public void setLaterNonCriticalExtensions (LaterNonCriticalExtensionsSequenceType value) {
            this.laterNonCriticalExtensions = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_V3a0NonCriticalExtensionsSequenceType;
        }

       private static IASN1PreparedElementData preparedData_V3a0NonCriticalExtensionsSequenceType = CoderFactory.getInstance().newPreparedElementData(V3a0NonCriticalExtensionsSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "v3a0NonCriticalExtensions", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private V3a0NonCriticalExtensionsSequenceType v3a0NonCriticalExtensions = null;
                
  
        
        public RRCConnectionSetupComplete_v380ext_IEs getRrcConnectionSetupComplete_v380ext () {
            return this.rrcConnectionSetupComplete_v380ext;
        }

        

        public void setRrcConnectionSetupComplete_v380ext (RRCConnectionSetupComplete_v380ext_IEs value) {
            this.rrcConnectionSetupComplete_v380ext = value;
        }
        
  
        
        public V3a0NonCriticalExtensionsSequenceType getV3a0NonCriticalExtensions () {
            return this.v3a0NonCriticalExtensions;
        }

        
        public boolean isV3a0NonCriticalExtensionsPresent () {
            return this.v3a0NonCriticalExtensions != null;
        }
        

        public void setV3a0NonCriticalExtensions (V3a0NonCriticalExtensionsSequenceType value) {
            this.v3a0NonCriticalExtensions = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_V380NonCriticalExtensionsSequenceType;
        }

       private static IASN1PreparedElementData preparedData_V380NonCriticalExtensionsSequenceType = CoderFactory.getInstance().newPreparedElementData(V380NonCriticalExtensionsSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "v380NonCriticalExtensions", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private V380NonCriticalExtensionsSequenceType v380NonCriticalExtensions = null;
                
  
        
        public RRCConnectionSetupComplete_v370ext getRrcConnectionSetupComplete_v370ext () {
            return this.rrcConnectionSetupComplete_v370ext;
        }

        

        public void setRrcConnectionSetupComplete_v370ext (RRCConnectionSetupComplete_v370ext value) {
            this.rrcConnectionSetupComplete_v370ext = value;
        }
        
  
        
        public V380NonCriticalExtensionsSequenceType getV380NonCriticalExtensions () {
            return this.v380NonCriticalExtensions;
        }

        
        public boolean isV380NonCriticalExtensionsPresent () {
            return this.v380NonCriticalExtensions != null;
        }
        

        public void setV380NonCriticalExtensions (V380NonCriticalExtensionsSequenceType value) {
            this.v380NonCriticalExtensions = value;
        }
        
  
                
                
        public void initWithDefaults() {
            
        }

        public IASN1PreparedElementData getPreparedData() {
            return preparedData_V370NonCriticalExtensionsSequenceType;
        }

       private static IASN1PreparedElementData preparedData_V370NonCriticalExtensionsSequenceType = CoderFactory.getInstance().newPreparedElementData(V370NonCriticalExtensionsSequenceType.class);
                
       }

       
                
        @ASN1Element ( name = "v370NonCriticalExtensions", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private V370NonCriticalExtensionsSequenceType v370NonCriticalExtensions = null;
                
  
        
        public RRC_TransactionIdentifier getRrc_TransactionIdentifier () {
            return this.rrc_TransactionIdentifier;
        }

        

        public void setRrc_TransactionIdentifier (RRC_TransactionIdentifier value) {
            this.rrc_TransactionIdentifier = value;
        }
        
  
        
        public STARTList getStartList () {
            return this.startList;
        }

        

        public void setStartList (STARTList value) {
            this.startList = value;
        }
        
  
        
        public UE_RadioAccessCapability getUe_RadioAccessCapability () {
            return this.ue_RadioAccessCapability;
        }

        
        public boolean isUe_RadioAccessCapabilityPresent () {
            return this.ue_RadioAccessCapability != null;
        }
        

        public void setUe_RadioAccessCapability (UE_RadioAccessCapability value) {
            this.ue_RadioAccessCapability = value;
        }
        
  
        
        public InterRAT_UE_RadioAccessCapabilityList getUe_RATSpecificCapability () {
            return this.ue_RATSpecificCapability;
        }

        
        public boolean isUe_RATSpecificCapabilityPresent () {
            return this.ue_RATSpecificCapability != null;
        }
        

        public void setUe_RATSpecificCapability (InterRAT_UE_RadioAccessCapabilityList value) {
            this.ue_RATSpecificCapability = value;
        }
        
  
        
        public V370NonCriticalExtensionsSequenceType getV370NonCriticalExtensions () {
            return this.v370NonCriticalExtensions;
        }

        
        public boolean isV370NonCriticalExtensionsPresent () {
            return this.v370NonCriticalExtensions != null;
        }
        

        public void setV370NonCriticalExtensions (V370NonCriticalExtensionsSequenceType value) {
            this.v370NonCriticalExtensions = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(RRCConnectionSetupComplete.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            