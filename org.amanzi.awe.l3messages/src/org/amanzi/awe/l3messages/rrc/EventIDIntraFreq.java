
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.CoderFactory;
import org.bn.annotations.ASN1Enum;
import org.bn.annotations.ASN1EnumItem;
import org.bn.annotations.ASN1PreparedElement;
import org.bn.coders.IASN1PreparedElement;
import org.bn.coders.IASN1PreparedElementData;




    @ASN1PreparedElement
    @ASN1Enum (
        name = "EventIDIntraFreq"
    )
    public class EventIDIntraFreq implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "e1a", hasTag = true , tag = 0 )
            e1a , 
            @ASN1EnumItem ( name = "e1b", hasTag = true , tag = 1 )
            e1b , 
            @ASN1EnumItem ( name = "e1c", hasTag = true , tag = 2 )
            e1c , 
            @ASN1EnumItem ( name = "e1d", hasTag = true , tag = 3 )
            e1d , 
            @ASN1EnumItem ( name = "e1e", hasTag = true , tag = 4 )
            e1e , 
            @ASN1EnumItem ( name = "e1f", hasTag = true , tag = 5 )
            e1f , 
            @ASN1EnumItem ( name = "e1g", hasTag = true , tag = 6 )
            e1g , 
            @ASN1EnumItem ( name = "e1h", hasTag = true , tag = 7 )
            e1h , 
            @ASN1EnumItem ( name = "e1i", hasTag = true , tag = 8 )
            e1i , 
            @ASN1EnumItem ( name = "e1j", hasTag = true , tag = 9 )
            e1j , 
            @ASN1EnumItem ( name = "spare6", hasTag = true , tag = 10 )
            spare6 , 
            @ASN1EnumItem ( name = "spare5", hasTag = true , tag = 11 )
            spare5 , 
            @ASN1EnumItem ( name = "spare4", hasTag = true , tag = 12 )
            spare4 , 
            @ASN1EnumItem ( name = "spare3", hasTag = true , tag = 13 )
            spare3 , 
            @ASN1EnumItem ( name = "spare2", hasTag = true , tag = 14 )
            spare2 , 
            @ASN1EnumItem ( name = "spare1", hasTag = true , tag = 15 )
            spare1 , 
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(EventIDIntraFreq.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            