
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "UE_InternalMeasuredResults_LCR_r4", isSet = false )
    public class UE_InternalMeasuredResults_LCR_r4 implements IASN1PreparedElement {
            
        @ASN1Element ( name = "ue-TransmittedPowerTDD-List", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private UE_TransmittedPowerTDD_List ue_TransmittedPowerTDD_List = null;
                
  
        @ASN1Element ( name = "t-ADVinfo", isOptional =  true , hasTag =  false  , hasDefaultValue =  false  )
    
	private T_ADVinfo t_ADVinfo = null;
                
  
        
        public UE_TransmittedPowerTDD_List getUe_TransmittedPowerTDD_List () {
            return this.ue_TransmittedPowerTDD_List;
        }

        
        public boolean isUe_TransmittedPowerTDD_ListPresent () {
            return this.ue_TransmittedPowerTDD_List != null;
        }
        

        public void setUe_TransmittedPowerTDD_List (UE_TransmittedPowerTDD_List value) {
            this.ue_TransmittedPowerTDD_List = value;
        }
        
  
        
        public T_ADVinfo getT_ADVinfo () {
            return this.t_ADVinfo;
        }

        
        public boolean isT_ADVinfoPresent () {
            return this.t_ADVinfo != null;
        }
        

        public void setT_ADVinfo (T_ADVinfo value) {
            this.t_ADVinfo = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(UE_InternalMeasuredResults_LCR_r4.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            