
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Enum (
        name = "MaxROHC_ContextSessions_r4"
    )
    public class MaxROHC_ContextSessions_r4 implements IASN1PreparedElement {        
        public enum EnumType {
            
            @ASN1EnumItem ( name = "s2", hasTag = true , tag = 0 )
            s2 , 
            @ASN1EnumItem ( name = "s4", hasTag = true , tag = 1 )
            s4 , 
            @ASN1EnumItem ( name = "s8", hasTag = true , tag = 2 )
            s8 , 
            @ASN1EnumItem ( name = "s12", hasTag = true , tag = 3 )
            s12 , 
            @ASN1EnumItem ( name = "s16", hasTag = true , tag = 4 )
            s16 , 
            @ASN1EnumItem ( name = "s24", hasTag = true , tag = 5 )
            s24 , 
            @ASN1EnumItem ( name = "s32", hasTag = true , tag = 6 )
            s32 , 
            @ASN1EnumItem ( name = "s48", hasTag = true , tag = 7 )
            s48 , 
            @ASN1EnumItem ( name = "s64", hasTag = true , tag = 8 )
            s64 , 
            @ASN1EnumItem ( name = "s128", hasTag = true , tag = 9 )
            s128 , 
            @ASN1EnumItem ( name = "s256", hasTag = true , tag = 10 )
            s256 , 
            @ASN1EnumItem ( name = "s512", hasTag = true , tag = 11 )
            s512 , 
            @ASN1EnumItem ( name = "s1024", hasTag = true , tag = 12 )
            s1024 , 
            @ASN1EnumItem ( name = "s16384", hasTag = true , tag = 13 )
            s16384 , 
        }
        
        private EnumType value;
        private Integer integerForm;
        
        public EnumType getValue() {
            return this.value;
        }
        
        public void setValue(EnumType value) {
            this.value = value;
        }
        
        public Integer getIntegerForm() {
            return integerForm;
        }
        
        public void setIntegerForm(Integer value) {
            integerForm = value;
        }

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(MaxROHC_ContextSessions_r4.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            