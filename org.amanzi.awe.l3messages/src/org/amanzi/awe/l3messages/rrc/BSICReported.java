
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.CoderFactory;
import org.bn.annotations.ASN1Choice;
import org.bn.annotations.ASN1Element;
import org.bn.annotations.ASN1Integer;
import org.bn.annotations.ASN1PreparedElement;
import org.bn.annotations.constraints.ASN1ValueRangeConstraint;
import org.bn.coders.IASN1PreparedElement;
import org.bn.coders.IASN1PreparedElementData;




    @ASN1PreparedElement
    @ASN1Choice ( name = "BSICReported" )
    public class BSICReported implements IASN1PreparedElement {
            @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 32L 
		
	   )
	   
        @ASN1Element ( name = "verifiedBSIC", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer verifiedBSIC = null;
                
  
        @ASN1Element ( name = "nonVerifiedBSIC", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private BCCH_ARFCN nonVerifiedBSIC = null;
                
  
        
        public Integer getVerifiedBSIC () {
            return this.verifiedBSIC;
        }

        public boolean isVerifiedBSICSelected () {
            return this.verifiedBSIC != null;
        }

        private void setVerifiedBSIC (Integer value) {
            this.verifiedBSIC = value;
        }

        
        public void selectVerifiedBSIC (Integer value) {
            this.verifiedBSIC = value;
            
                    setNonVerifiedBSIC(null);
                            
        }

        
  
        
        public BCCH_ARFCN getNonVerifiedBSIC () {
            return this.nonVerifiedBSIC;
        }

        public boolean isNonVerifiedBSICSelected () {
            return this.nonVerifiedBSIC != null;
        }

        private void setNonVerifiedBSIC (BCCH_ARFCN value) {
            this.nonVerifiedBSIC = value;
        }

        
        public void selectNonVerifiedBSIC (BCCH_ARFCN value) {
            this.nonVerifiedBSIC = value;
            
                    setVerifiedBSIC(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(BSICReported.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            