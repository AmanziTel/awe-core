
package org.amanzi.awe.l3messages.rrc;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "MeasuredResultsOnRACHinterFreq", isSet = false )
    public class MeasuredResultsOnRACHinterFreq implements IASN1PreparedElement {
            @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 1L 
		
	   )
	   
        @ASN1Element ( name = "interFreqCellIndication-SIB11", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer interFreqCellIndication_SIB11 = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 1L 
		
	   )
	   
        @ASN1Element ( name = "interFreqCellIndication-SIB12", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private Integer interFreqCellIndication_SIB12 = null;
                
  
        @ASN1Element ( name = "interFreqRACHRepCellsList", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private InterFreqRACHRepCellsList interFreqRACHRepCellsList = null;
                
  
        
        public Integer getInterFreqCellIndication_SIB11 () {
            return this.interFreqCellIndication_SIB11;
        }

        

        public void setInterFreqCellIndication_SIB11 (Integer value) {
            this.interFreqCellIndication_SIB11 = value;
        }
        
  
        
        public Integer getInterFreqCellIndication_SIB12 () {
            return this.interFreqCellIndication_SIB12;
        }

        

        public void setInterFreqCellIndication_SIB12 (Integer value) {
            this.interFreqCellIndication_SIB12 = value;
        }
        
  
        
        public InterFreqRACHRepCellsList getInterFreqRACHRepCellsList () {
            return this.interFreqRACHRepCellsList;
        }

        

        public void setInterFreqRACHRepCellsList (InterFreqRACHRepCellsList value) {
            this.interFreqRACHRepCellsList = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(MeasuredResultsOnRACHinterFreq.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            